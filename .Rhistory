xlab(label = element_blank()) + ylab(label = element_blank());print(p)
df_PSD <- dataframe_PSD %>% filter(Year == '2020') %>% mutate(Fase = case_when(
Month %in% 1 ~ 'jan',
Month %in% 2 ~ 'fev',
Month %in% 3:8~ 'mar-ago',
Month %in% 9:12 ~ 'set-dez'
)) %>%
mutate(Fase = factor(x = Fase, ordered=T,levels=c('jan','fev','mar-ago','set-dez')))
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free") + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='3 weeks',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2
df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2)
cols <- c('Horário'='#000000',"Leve" = 'green', "Médio" = "orange", "Pesado" = "#E41A1C")
df_PSD <- dataframe_PSD %>% filter(Year == '2020') %>% mutate(Fase = case_when(
Month %in% 1 ~ 'jan',
Month %in% 2 ~ 'fev',
Month %in% 3:8~ 'mar-ago',
Month %in% 9:12 ~ 'set-dez'
)) %>%
mutate(Fase = factor(x = Fase, ordered=T,levels=c('jan','fev','mar-ago','set-dez')))
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free") + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='3 weeks',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free") + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='1 week',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free") + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='3 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free") + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='2 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free_x") + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='2 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
df_PSD <- dataframe_PSD %>% filter(Year == '2020') %>% mutate(Fase = case_when(
Month %in% 1 ~ 'jan',
Month %in% 2:3 ~ 'fev-mar',
Month %in% 4:8~ 'abr-ago',
Month %in% 9:12 ~ 'set-dez'
)) %>%
mutate(Fase = factor(x = Fase, ordered=T,levels=c('jan','fev-mar','abr-ago','set-dez')))
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free_x") + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='2 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
if(!dir.exists(paste0("../Stochastic_Processes_PSD_Output/2020/COVID"))){
dir.create(paste0("../Stochastic_Processes_PSD_Output/2020/COVID"))
}else{}
cols <- c('Horário'='#000000',"Leve" = 'green', "Médio" = "orange", "Pesado" = "#E41A1C")
#cols <- c('Horário'='gray',"Leve" = 'green', "Médio" = "orange", "Pesado" = "#E41A1C")
#Uncomment png(...) and #dev.off() lines to print the plots in .png.
#png("../Stochastic_Processes_PSD_Output/AllYears_PSD.png")
df_PSD <- dataframe_PSD %>% filter(Year == '2020') %>% mutate(Fase = case_when(
Month %in% 1 ~ 'jan',
Month %in% 2:3 ~ 'fev-mar',
Month %in% 4:8~ 'abr-ago',
Month %in% 9:12 ~ 'set-nov'
)) %>%
mutate(Fase = factor(x = Fase, ordered=T,levels=c('jan','fev-mar','abr-ago','set-nov')))
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free_x") + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='2 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
dev.off()
#Uncomment png(...) and #dev.off() lines to print the plots in .png.
png("../Stochastic_Processes_PSD_Output/COVID_2020_PSD.png")
df_PSD <- dataframe_PSD %>% filter(Year == '2020') %>% mutate(Fase = case_when(
Month %in% 1 ~ 'jan',
Month %in% 2:3 ~ 'fev-mar',
Month %in% 4:8~ 'abr-ago',
Month %in% 9:12 ~ 'set-nov'
)) %>%
mutate(Fase = factor(x = Fase, ordered=T,levels=c('jan','fev-mar','abr-ago','set-nov')))
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free_x") + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='2 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
dev.off()
#Uncomment png(...) and #dev.off() lines to print the plots in .png.
png("../Stochastic_Processes_PSD_Output/2020/COVID/COVID_2020_PSD.png")
df_PSD <- dataframe_PSD %>% filter(Year == '2020') %>% mutate(Fase = case_when(
Month %in% 1 ~ 'jan',
Month %in% 2:3 ~ 'fev-mar',
Month %in% 4:8~ 'abr-ago',
Month %in% 9:12 ~ 'set-nov'
)) %>%
mutate(Fase = factor(x = Fase, ordered=T,levels=c('jan','fev-mar','abr-ago','set-nov')))
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free_x") + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='2 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
dev.off()
#Uncomment png(...) and #dev.off() lines to print the plots in .png.
png("../Stochastic_Processes_PSD_Output/2020/COVID/COVID_2020_PSD.png")
df_PSD <- dataframe_PSD %>% filter(Year == '2020') %>% mutate(Fase = case_when(
Month %in% 1 ~ 'jan',
Month %in% 2:3 ~ 'fev-mar',
Month %in% 4:8~ 'abr-ago',
Month %in% 9:12 ~ 'set-nov'
)) %>%
mutate(Fase = factor(x = Fase, ordered=T,levels=c('jan','fev-mar','abr-ago','set-nov')))
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free_x",space='free_x') + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='2 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
dev.off()
View(df_PSD)
df_PSD <- dataframe_PSD %>% filter(Year == '2020') %>% mutate(Fase = case_when(
Month %in% 1 ~ 'jan',
Month %in% 2:3 ~ 'fev-mar',
Month %in% 4:8~ 'abr-jun',
Month %in% 9:12 ~ 'jul-nov'
)) %>%
mutate(Fase = factor(x = Fase, ordered=T,levels=c('jan','fev-mar','abr-jun','jul-nov')))
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free_x",space='free_x') + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='2 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free",space='free_x') + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='2 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
#Uncomment png(...) and #dev.off() lines to print the plots in .png.
png("../Stochastic_Processes_PSD_Output/2020/COVID/COVID_2020_freey_PSD.png")
df_PSD <- dataframe_PSD %>% filter(Year == '2020') %>% mutate(Fase = case_when(
Month %in% 1 ~ 'jan',
Month %in% 2:3 ~ 'fev-mar',
Month %in% 4:8~ 'abr-jun',
Month %in% 9:12 ~ 'jul-nov'
)) %>%
mutate(Fase = factor(x = Fase, ordered=T,levels=c('jan','fev-mar','abr-jun','jul-nov')))
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free",space='free_x') + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='2 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
dev.off()
if(!dir.exists(paste0("../Stochastic_Processes_PSD_Output/2020/COVID"))){
dir.create(paste0("../Stochastic_Processes_PSD_Output/2020/COVID"))
}else{}
cols <- c('Horário'='#000000',"Leve" = 'green', "Médio" = "orange", "Pesado" = "#E41A1C")
#cols <- c('Horário'='gray',"Leve" = 'green', "Médio" = "orange", "Pesado" = "#E41A1C")
#Uncomment png(...) and #dev.off() lines to print the plots in .png.
png("../Stochastic_Processes_PSD_Output/2020/COVID/COVID_2020_freey_PSD.png")
df_PSD <- dataframe_PSD %>% filter(Year == '2020') %>% mutate(Fase = case_when(
Month %in% 1 ~ 'jan',
Month %in% 2:3 ~ 'fev-mar',
Month %in% 4:8~ 'abr-jun',
Month %in% 9:12 ~ 'jul-nov'
)) %>%
mutate(Fase = factor(x = Fase, ordered=T,levels=c('jan','fev-mar','abr-jun','jul-nov')))
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free",space='free_x') + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='2 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
dev.off()
png("../Stochastic_Processes_PSD_Output/2020/COVID/COVID_2020_PSD.png")
df_PSD <- dataframe_PSD %>% filter(Year == '2020') %>% mutate(Fase = case_when(
Month %in% 1 ~ 'jan',
Month %in% 2:3 ~ 'fev-mar',
Month %in% 4:8~ 'abr-jun',
Month %in% 9:12 ~ 'jul-nov'
)) %>%
mutate(Fase = factor(x = Fase, ordered=T,levels=c('jan','fev-mar','abr-jun','jul-nov')))
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free_x",space='free_x') + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='2 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
dev.off()
cols <- c('Horário'='#000000',"Leve" = 'green', "Médio" = "orange", "Pesado" = "#E41A1C")
#Uncomment png(...) and #dev.off() lines to print the plots in .png.
png("../Stochastic_Processes_PSD_Output/2020/COVID/COVID_2020_PSD.png")
df_PSD <- dataframe_PSD %>% filter(Year == '2020') %>% mutate(Fase = case_when(
Month %in% 1 ~ 'jan',
Month %in% 2:3 ~ 'fev-mar',
Month %in% 4:6~ 'abr-jun',
Month %in% 7:12 ~ 'jul-nov'
)) %>%
mutate(Fase = factor(x = Fase, ordered=T,levels=c('jan','fev-mar','abr-jun','jul-nov')))
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free_x",space='free_x') + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='2 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
dev.off()
#Uncomment png(...) and #dev.off() lines to print the plots in .png.
png("../Stochastic_Processes_PSD_Output/2020/COVID/COVID_2020_freey_PSD.png")
df_PSD <- dataframe_PSD %>% filter(Year == '2020') %>% mutate(Fase = case_when(
Month %in% 1 ~ 'jan',
Month %in% 2:3 ~ 'fev-mar',
Month %in% 4:6~ 'abr-jun',
Month %in% 7:12 ~ 'jul-nov'
)) %>%
mutate(Fase = factor(x = Fase, ordered=T,levels=c('jan','fev-mar','abr-jun','jul-nov')))
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free",space='free_x') + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='2 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
dev.off()
View(df_PSD)
if(!dir.exists(paste0("../Stochastic_Processes_PSD_Output/2020/COVID"))){
dir.create(paste0("../Stochastic_Processes_PSD_Output/2020/COVID"))
}else{}
cols <- c('Horário'='#000000',"Leve" = 'green', "Médio" = "orange", "Pesado" = "#E41A1C")
#cols <- c('Horário'='gray',"Leve" = 'green', "Médio" = "orange", "Pesado" = "#E41A1C")
#Uncomment png(...) and #dev.off() lines to print the plots in .png.
png("../Stochastic_Processes_PSD_Output/2020/COVID/COVID_2020_freey_PSD.png")
df_PSD <- dataframe_PSD %>% filter(Year == '2020') %>% mutate(Fase = case_when(
Month %in% 1 ~ 'jan',
Month %in% 2:3 ~ 'fev-mar',
Month %in% 4:7~ 'abr-jul',
Month %in% 8:12 ~ 'ago-nov'
)) %>%
mutate(Fase = factor(x = Fase, ordered=T,levels=c('jan','fev-mar','abr-jul','ago-nov')))
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free",space='free_x') + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='2 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
dev.off()
#Uncomment png(...) and #dev.off() lines to print the plots in .png.
png("../Stochastic_Processes_PSD_Output/2020/COVID/COVID_2020_PSD.png")
df_PSD <- dataframe_PSD %>% filter(Year == '2020') %>% mutate(Fase = case_when(
Month %in% 1 ~ 'jan',
Month %in% 2:3 ~ 'fev-mar',
Month %in% 4:7~ 'abr-jul',
Month %in% 8:12 ~ 'ago-nov'
)) %>%
mutate(Fase = factor(x = Fase, ordered=T,levels=c('jan','fev-mar','abr-jul','ago-nov')))
p <- df_PSD %>%
ggplot(data=.,aes(x = timestamp,y = (PSDh),color='Horário'))+geom_line() +
geom_point(aes(y=PSD,colour=LoadStep),shape=1,alpha=0.2) +
scale_colour_manual(values = cols) +
facet_grid(rows=vars(SubMkt),cols=vars(Year,Fase),
scales = "free_x",space='free_x') + theme_bw() +
# Set legend position of SubMkt
theme(legend.position="bottom", legend.title = element_blank()) +
# x-axis' label rotation
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_x_datetime(breaks='2 weeks ',date_labels ="%d/%b") +
# x and y variable labels
xlab(label = element_blank()) + ylab(label = element_blank());print(p)
dev.off()
if(!dir.exists(paste0("../Stochastic_Processes_PSD_Output/Model/"))){
dir.create(paste0("../Stochastic_Processes_PSD_Output/Model/"))
}else{}
cols <- c('Horário'='#000000',"Leve" = 'green', "Médio" = "orange", "Pesado" = "#E41A1C")
df_PSD <- dataframe_PSD %>% filter(SubMkt == 'SE', Date >= ymd('2020-08-01')) %>%
arrange(Date,Hour_Hourly,SubMkt) %>% group_by(SubMkt,LoadStep) %>%
mutate(index.hC_t = 1:n()) %>% ungroup()
df_PSD <- dataframe_PSD %>% filter(SubMkt == 'SE', Date >= ymd('2020-08-01')) %>%
arrange(Date,Hour_Hourly,SubMkt) %>% group_by(SubMkt,LoadStep) %>%
mutate(index.hC_t = 1:n()) %>% ungroup()
names(df_PSD)
df_PSD <- dataframe_PSD %>% filter(SubMkt == 'SE', Date >= ymd('2020-08-01')) %>%
arrange(Date,Hour_Hourly,SubMkt) %>% group_by(SubMkt,LoadStep) %>%
mutate(index.hC_t = 1:n()) %>% ungroup()
names(df_PSD)
vec.Type1 <- df_PSD$Type_LoadStep=='Tipo 1'
vec.Type2 <- df_PSD$Type_LoadStep=='Tipo 2'
vec.Leve <- df_PSD$LoadStep=='Leve'
vec.Medio <- df_PSD$LoadStep=='Médio'
vec.Pesado <- df_PSD$LoadStep=='Pesado'
vec.D.Chg_LS <- df_PSD$Dummy_ChgLoadStep==1
vec.D.Chg_Day <- df_PSD$Dummy_ChgDay==1
vec.D.Chg_Both <- (vec.D.Chg_Day*vec.D.Chg_LS)==1
ggplot()+
geom_line(data=df_PSD,aes(x = timestamp,y = Xt,color='Horário'))+
scale_colour_manual(values = cols) +
theme(axis.text.x = element_text(angle = 90)) +
#  facet_grid(rows=vars(SubMkt),cols=vars(Year,LoadStep))  +
theme_bw() +
# Set legend position of SubMkt
theme(legend.position = 'none', legend.title = element_blank())  +
#xlab(TeX(paste0('$\\left(\\frac{PLDh_{t}}{PLD^{','Carga','}_{t}} \\right) - 1$'))) +
ylab(label = element_blank())
ggplot()+
geom_line(data=df_PSD,aes(x = timestamp,y = h_t,color=LoadStep))+
scale_colour_manual(values = cols)
if(!dir.exists(paste0("../Stochastic_Processes_PSD_Output/Model/"))){
dir.create(paste0("../Stochastic_Processes_PSD_Output/Model/"))
}else{}
cols <- c('Horário'='#000000',"Leve" = 'green', "Médio" = "orange", "Pesado" = "#E41A1C")
df_PSD <- dataframe_PSD %>% filter(SubMkt == 'SE', Date >= ymd('2020-08-01')) %>%
arrange(Date,Hour_Hourly,SubMkt) %>% group_by(SubMkt,LoadStep) %>%
mutate(index.hC_t = 1:n()) %>% ungroup()
names(df_PSD)
vec.Type1 <- df_PSD$Type_LoadStep=='Tipo 1'
vec.Type2 <- df_PSD$Type_LoadStep=='Tipo 2'
vec.Leve <- df_PSD$LoadStep=='Leve'
vec.Medio <- df_PSD$LoadStep=='Médio'
vec.Pesado <- df_PSD$LoadStep=='Pesado'
vec.D.Chg_LS <- df_PSD$Dummy_ChgLoadStep==1
vec.D.Chg_Day <- df_PSD$Dummy_ChgDay==1
vec.D.Chg_Both <- (vec.D.Chg_Day*vec.D.Chg_LS)==1
ggplot()+
geom_line(data=df_PSD,aes(x = timestamp,y = Xt,color='Horário'))+
scale_colour_manual(values = cols) +
theme(axis.text.x = element_text(angle = 90)) +
#  facet_grid(rows=vars(SubMkt),cols=vars(Year,LoadStep))  +
theme_bw() +
# Set legend position of SubMkt
theme(legend.position = 'none', legend.title = element_blank())  +
#xlab(TeX(paste0('$\\left(\\frac{PLDh_{t}}{PLD^{','Carga','}_{t}} \\right) - 1$'))) +
ylab(label = element_blank())
ggplot()+
geom_line(data=df_PSD,aes(x = timestamp,y = h_t,color=LoadStep))+
scale_colour_manual(values = cols)
ggplot()+
geom_line(data=df_PSD,aes(x = index.hC_t,y = Xt,color='Horário'))+
scale_colour_manual(values = cols) +
theme(axis.text.x = element_text(angle = 90)) +
facet_grid(rows=vars(LoadStep))  +
theme_bw() +
# Set legend position of SubMkt
theme(legend.position = 'none', legend.title = element_blank())  +
#xlab(TeX(paste0('$\\left(\\frac{PLDh_{t}}{PLD^{','Carga','}_{t}} \\right) - 1$'))) +
ylab(label = element_blank())
ggplot()+
geom_line(data=df_PSD,aes(x = timestamp,y = hC_t,color=LoadStep))+
scale_colour_manual(values = cols)
acf2(df_PSD$h_t,max.lag = 48)
vec.pkg <- c("latex2exp",'MASS','atsts','gridExtra',"rstudioapi","lubridate","tictoc",'readxl',"tidyverse")
vec.newpkg <- vec.pkg[!(vec.pkg %in% installed.packages()[,"Package"])]
if(length(vec.newpkg)) install.packages(vec.newpkg)
lapply(vec.pkg, require, character.only = TRUE)
rm(vec.pkg,vec.newpkg)
vec.pkg <- c("latex2exp",'MASS','atstsa','forecast','gridExtra',"rstudioapi","lubridate","tictoc",'readxl',"tidyverse")
vec.newpkg <- vec.pkg[!(vec.pkg %in% installed.packages()[,"Package"])]
if(length(vec.newpkg)) install.packages(vec.newpkg)
lapply(vec.pkg, require, character.only = TRUE)
rm(vec.pkg,vec.newpkg)
